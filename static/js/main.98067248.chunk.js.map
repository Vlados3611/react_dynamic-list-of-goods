{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","style","color","name","id","getAll","fetch","then","response","json","get5First","sort","acc","curr","localeCompare","slice","getRedGoods","filter","App","useState","goodsList","setGoodsList","isLoaded","setIsLoaded","loadedGoods","useCallback","loadedFunction","a","initialGoods","className","type","onClick","height","width","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","ReactDOM","render","document","getElementById"],"mappings":"8PAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAOF,EAAKE,OAHvB,SAKGF,EAAKG,MAJDH,EAAKI,UCNX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,WACvB,OAAOL,IACJE,MAAK,SAAAT,GAAK,OAAIA,EACZa,MAAK,SAACC,EAAKC,GAAN,OAAeD,EAAIT,KAAKW,cAAcD,EAAKV,SAChDY,MAAM,EAAG,OAGHC,EAAc,WACzB,OAAOX,IACJE,MAAK,SAAAT,GAAK,OAAIA,EAAMmB,QACnB,SAACjB,GAAD,MAAyB,QAAfA,EAAKE,aCTRgB,EAAgB,WAC3B,MAAkCC,mBAAiB,IAAnD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,oBAAkB,GAAlD,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAcC,sBAAW,uCAAC,WAAOC,GAAP,eAAAC,EAAA,6DAC9BJ,GAAY,GADkB,kBAGDG,IAHC,OAGtBE,EAHsB,OAK5BP,EAAaO,GACbL,GAAY,GANgB,gDAQ5BA,GAAY,GARgB,yDAAD,sDAU5B,IAEH,OACE,mCACE,sBAAKM,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMP,EAAYnB,IAH7B,4BAQA,wBACEyB,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMP,EAAYd,IAH7B,gCAQA,wBACEoB,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMP,EAAYR,IAH7B,4BASGM,EAeG,cAAC,EAAD,CAAWxB,MAAOsB,IAblB,cAAC,IAAD,CACEY,OAAQ,GACRC,MAAO,GACP/B,MAAM,UACNgC,aAAc,GACdC,aAAa,GACbC,SAAO,EACPC,UAAU,eACVC,eAAe,UACfC,YAAa,EACbC,qBAAsB,UClEtCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.98067248.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll<T>(): Promise<T[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll<Good>()\n    .then(goods => goods\n      .sort((acc, curr) => acc.name.localeCompare(curr.name))\n      .slice(0, 5)); // sort and get the first 5\n};\n\nexport const getRedGoods = () => {\n  return getAll<Good>()\n    .then(goods => goods.filter(\n      (good) => good.color === 'red',\n    )); // get only red\n};\n","import React, { useState, useCallback } from 'react';\nimport './App.scss';\nimport { Oval } from 'react-loader-spinner';\nimport { GoodsList } from './GoodsList';\n\nimport { Good } from './types/Good';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\n// or\n// import * as goodsAPI from './api/goods';\n\nexport const App: React.FC = () => {\n  const [goodsList, setGoodsList] = useState<Good[]>([]);\n  const [isLoaded, setIsLoaded] = useState<boolean>(true);\n\n  const loadedGoods = useCallback(async (loadedFunction) => {\n    setIsLoaded(false);\n    try {\n      const initialGoods = await loadedFunction();\n\n      setGoodsList(initialGoods);\n      setIsLoaded(true);\n    } catch {\n      setIsLoaded(true);\n    }\n  }, []);\n\n  return (\n    <>\n      <div className=\"App\">\n        <h1>Dynamic list of Goods</h1>\n\n        <button\n          type=\"button\"\n          data-cy=\"all-button\"\n          onClick={() => loadedGoods(getAll)}\n        >\n          Load all goods\n        </button>\n\n        <button\n          type=\"button\"\n          data-cy=\"first-five-button\"\n          onClick={() => loadedGoods(get5First)}\n        >\n          Load 5 first goods\n        </button>\n\n        <button\n          type=\"button\"\n          data-cy=\"red-button\"\n          onClick={() => loadedGoods(getRedGoods)}\n        >\n          Load red goods\n        </button>\n\n        {\n          !isLoaded\n            ? (\n              <Oval\n                height={80}\n                width={80}\n                color=\"#4fa94d\"\n                wrapperStyle={{}}\n                wrapperClass=\"\"\n                visible\n                ariaLabel=\"oval-loading\"\n                secondaryColor=\"#4fa94d\"\n                strokeWidth={2}\n                strokeWidthSecondary={2}\n              />\n            ) : (\n              <GoodsList goods={goodsList} />\n            )\n        }\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}